services:
  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    volumes:
      - ./tests/postgres-initdb.d:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "sh -c \"ps -o pid,comm | grep -Eq '^ *1 postgres' && pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}\"" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s
  # Development container with your app
  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: postgres
      DB_USER: postgres
      DB_PASSWORD: postgres
      S3_ENDPOINT: http://minio:9000
      S3_ACCESS_KEY_ID: minioadmin
      S3_SECRET_ACCESS_KEY: minioadmin
      S3_REGION: us-east-1
      S3_BUCKET: test-bucket
      S3_PATH_PREFIX: backups
      S3_SSL: "false"
      CRON_SCHEDULE: "* * * * *" # every minute
      DUMP_INFIX: "_dev"
      LOG_LEVEL: "debug"
      TIME_ZONE: "Europe/Berlin"
      # RESTORE_KEY: "backups/pg16_postgres_2025-08-08T21-41-00_dev.sql.gz"
    volumes:
      - .:/app
    depends_on:
      mc:
        condition: service_completed_successfully
      postgres:
        condition: service_healthy
    command: air 

  # Local S3 for testing
  minio:
    image: minio/minio:latest
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 5s
      timeout: 2s
      retries: 5

  mc:
    image: minio/mc
    depends_on:
      minio:
        condition: service_healthy
    environment:
      S3_BUCKET: test-bucket
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc alias set minio http://minio:9000 minioadmin minioadmin;
      /usr/bin/mc mb -p minio/test-bucket;
      "

